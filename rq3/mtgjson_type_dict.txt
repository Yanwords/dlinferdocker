: 0
typing.Any: 1
dict: 2
int: 3
num: 4
_generate_prices: 5
utils.deep_merge_dictionaries: 6
chunk: 7
build_today_prices: 8
get_price_archive_data: 9
bool: 10
str: 11
typing.Callable: 12
list: 13
card: 14
classes.MtgjsonSetObject: 15
build_referral_map: 16
sorted: 17
compiled_classes.MtgjsonAllPrintingsObject: 18
construct_format_map: 19
construct_atomic_cards_format_map: 20
price_builder.build_prices: 21
price_builder.get_price_archive_data: 22
classes.MtgjsonDeckHeaderObject: 23
consts.SUPPORTED_FORMAT_OUTPUTS: 24
set: 25
utils.get_file_hash: 26
providers.ScryfallProvider: 27
get_all_scryfall_sets: 28
classes.MtgjsonForeignDataObject: 29
card_type: 30
float: 31
classes.MtgjsonLegalitiesObject: 32
classes.MtgjsonRulingObject: 33
ord: 34
get_scryfall_set_data: 35
get_base_and_total_set_sizes: 36
classes.MtgjsonCardObject: 37
scryfall_object: 38
parse_card_types: 39
extras_cards: 40
mkm_cards: 41
mkm_card: 42
len: 43
mtgjson5.set_builder.build_mtgjson_set: 44
mtgjson5.arg_parser.get_sets_to_build: 45
mtgjson5.arg_parser.parse_args: 46
utils.generate_card_mapping: 47
providers.tcgplayer.get_tcgplayer_sku_data: 48
atomic_card: 49
entry: 50
utils.parse_magic_rules_subset: 51
regex_str_to_list: 52
classes.mtgjson_game_formats.MtgjsonGameFormatsObject: 53
classes.mtgjson_identifiers.MtgjsonIdentifiersObject: 54
classes.mtgjson_legalities.MtgjsonLegalitiesObject: 55
classes.mtgjson_prices.MtgjsonPricesObject: 56
classes.mtgjson_purchase_urls.MtgjsonPurchaseUrlsObject: 57
tuple: 58
classes.mtgjson_translations.MtgjsonTranslationsObject: 59
classes.mtgjson_deck.MtgjsonDeckObject: 60
utils.retryable_session: 61
utils.parallel_call: 62
get_tcgplayer_sku_map: 63
mkmsdk.mkm.Mkm: 64
None: 65
